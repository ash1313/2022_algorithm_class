{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"과제6","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNtwrXHFdxIQ65sZl++iQCT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":24,"metadata":{"id":"Gown0ZvDaCjh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649318419859,"user_tz":-540,"elapsed":261,"user":{"displayName":"안효준","userId":"15869666014845161131"}},"outputId":"2fb625f1-7871-479a-c191-0774ce1ac64a"},"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","15\n","4\n","7\n"]}],"source":["#축소 정복 기법을 이용한 k번째 작은 수 찾기\n","#알고리즘을 반복구조로 기술하라 + 로무토분할을 구현하라\n","\n","def quick_select(A, left, right, k) : # 축소 정복 기법을 이용한 찾는 함수\n","  while left<= right :                # left가 right보다 작으면 반복한다.\n","    pos = partition(A, left, right)   # partition = 로무토 분할 기준 되는 인덱스\n","    if pos == k - 1:                  # 만약 값을 찾으면\n","      return A[pos]                   # 완료\n","    elif pos > k - 1 :                # 답이 왼쪽 리스트에 있을 때\n","      right = pos -1                  # right값에 pos-1을 넣음\n","    else :                            # 답이 오른쪽 리스트에 있을 때\n","      left = pos +1                   # left값에 pos+1을 넣음\n","  return -1\n","\n","\n","def partition(arr, left, right) : # 로무토 분할 함수(i,j를 모두 증가시키는 방식)\n","    pivot = arr[right]            # 피벗은 배열의 맨 오른쪽으로 지정\n","    i = left -1                   # i는 배열의 첫번째 인덱스의 -1로 둔다.\n","    for j in range(left,right):   # left에서 right-1만큼 j번 반복한다.(j는 맨 왼쪽 index)\n","        if arr[j] < pivot :       # 만약 j번째 값이 pivot보다 작을 때\n","          i += 1                  # i의 값을 1증가시킨다.\n","          #i가 가르키는 값과 j가 가르키는 값 swap\n","          temp = array[i]         # temp에 array[i] 값을 넣고\n","          array[i] = array[j]     # array[i] 값에는 array[j]값을 넣는다.\n","          array[j] = temp         # array[j] 값에는 temp를 넣어 swap 한다.\n","    # i+1 위치와 피봇값을 swap\n","    temp = array[i+1]             # temp에 array[i+1] 값을 넣고\n","    array[i+1] = array[right]     # array[i+1] 값에는 array[right](피봇값)을 넣는다.\n","    array[right] = temp           # array[right]의 값을 temp를 넣어 swap한다\n","    return i+1                    # i+1을 리턴한다.\n","\n","array=[12,3,5,7,4,19,26,23,15] #array[12,3,5,7,4,19,26,23,15]\n","array1=[1,2,3,4,5,6,7,8,9]     #array[8,7,3,4,9,6,2,1,5]\n","\n","n = len(array)  #array의 개수\n","\n","print(quick_select(array,0,n-1,3)) #(answer : 5)\n","print(quick_select(array,0,n-1,6))#(answer : 15)\n","\n","print(quick_select(array1,0,n-1,4))#(answer : 4)\n","print(quick_select(array1,0,n-1,7))#(answer : 7)"]}]}